<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ siteTitle }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        :root {
            --bluerock-blue: #007bff; /* Example blue, replace with actual from bluerock.io */
            --bluerock-dark: #343a40; /* Example dark, replace with actual from bluerock.io */
        }
        .navbar {
            background-color: var(--bluerock-dark);
        }
        .navbar-brand,
        .nav-link {
            /* color: white !important; */
        }
        #searchInput {
            border: none;
            border-bottom: 1px solid #fff; /* White underline */
            border-radius: 0;
            box-shadow: none;
            color: white;
        }
        #searchInput::placeholder {
            color: rgba(255, 255, 255, 0.7); /* Lighter white for placeholder */
        }
        #searchInput:focus {
            border-color: #fff;
            box-shadow: none;
        }
        .sidebar {
            bottom: 0;
            left: 0;
            z-index: 1000;
            padding-left: 0;
            overflow-x: hidden;
            overflow-y: auto;
            background-color: #f8f9fa;
            border-right: 1px solid #dee2e6;
        }
        #sidebar {
            padding-top: 10pt;
        }
        .main-content {
            padding-top: 10pt; /* Height of navbar + some spacing */
        }
        #searchResults {
            position: absolute;
            top: 56px; /* Height of navbar */
            right: 15px; /* Adjust as needed */
            width: 300px; /* Adjust as needed */
            z-index: 1050; /* Above navbar */
        }

ul#sidebar > li > a {
  padding: .25rem .5rem;
  font-weight: 600;
  color: var(--bs-emphasis-color);
  background-color: transparent;
}

.sidebar-toggle {
  padding: .25rem .5rem;
  font-weight: 600;
  color: var(--bs-emphasis-color);
  background-color: transparent;
}

.sidebar-toggle:hover,
.sidebar-toggle:focus {
  color: rgba(var(--bs-emphasis-color-rgb), .85);
  background-color: var(--bs-tertiary-bg);
}

.sidebar-toggle::before {
    display: inline-block;
  width: 1.25em;
  line-height: 0;
  content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
  transition: transform .35s ease;
  transform-origin: .5em 50%;
}

[data-bs-theme="dark"] .sidebar-toggle::before {
  content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%28255,255,255,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
}

.sidebar-toggle[aria-expanded="true"] {
  color: rgba(var(--bs-emphasis-color-rgb), .85);
}
.sidebar-toggle[aria-expanded="true"]::before {
  transform: rotate(90deg);
}

.sidebar-toggle-nav a {
  padding: .1875rem .5rem;
  margin-top: .125rem;
  margin-left: 1.25rem;
}
.sidebar-toggle-nav a:hover,
.sidebar-toggle-nav a:focus {
  background-color: var(--bs-tertiary-bg);
}
    </style>
<link
			href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css"
			rel="stylesheet"
		/>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark sticky-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">{{ siteTitle }}</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <div class="input-group">
                            <span class="input-group-text bg-transparent border-0 text-white"><i class="bi bi-search"></i></span>
                            <input type="search" id="searchInput" class="form-control bg-transparent border-0 border-bottom text-white" placeholder="Search..." aria-label="Search">
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block sidebar collapse">
              {% include "sidebar.njk" %}
            </nav>

            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
                {% block content %}
                  {{ content | safe }}
                {% endblock %}
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="/node_modules/lunr/lunr.min.js"></script>
    <script>
        (async function() {
            const searchInput = document.getElementById('searchInput');
            const searchResults = document.createElement('div');
            searchResults.id = 'searchResults';
            searchResults.classList.add('list-group', 'mt-2');
            document.body.appendChild(searchResults);

            let idx;
            let docs;

            try {
                const response = await fetch('/search.json');
                docs = await response.json();

                idx = lunr(function () {
                    this.ref('url');
                    this.field('title');
                    this.field('content');

                    docs.forEach(function (doc) {
                        this.add(doc);
                    }, this);
                });
            } catch (error) {
                console.error('Error loading search index:', error);
                return;
            }

            searchInput.addEventListener('input', function() {
                const query = this.value;
                searchResults.innerHTML = '';

                if (query.length > 2) {
                    const results = idx.search(query);
                    results.forEach(result => {
                        const doc = docs.find(d => d.url === result.ref);
                        if (doc) {
                            const a = document.createElement('a');
                            a.href = doc.url;
                            a.classList.add('list-group-item', 'list-group-item-action');
                            a.textContent = doc.title;
                            searchResults.appendChild(a);
                        }
                    });
                }
            });
        })();
    </script>
</body>
</html>
