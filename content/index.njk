---
layout: base.njk
title: Home
eleventyNavigation:
  key: home
  title : Home
  order : 0
---

<h1> Verifying C++ Code with BlueRock</h1>
<p>
  This field-guide is designed to help you become familiar with specifying and verifying C++ programs using the BlueRock Security FM tools.
  This guide is <em>not</em> meant to teach research level depth in separation logic or program verification and will generally avoid deep technical content.
  Interested readers should check out the <a href="/other_resources">Further Reading</a> pages for more information.
</p>

<section>
  <h2>Getting Started</h2>
  <p>
    These docs are designed to let you focus on what is most important to you, whether it be reasoning about classes or control flow, capturing sharing patterns, or working with collections.
  </p>

  <dl>
    <dt>Getting Started</dt>
    <dd>
      For a first taste of verifying C++ programs, take a look at the quickstart guide.
      This will walk you through using the tools to verify simple programs and give you the basics to start exploring.
    </dd>
  </dl>
</section>

<section>
  <h2>Core Tutorials</h2>

  <p>
    After you get past the basics, check out these tutorials that focus on specific topics.
  </p>

  <dl>
    <dt>Specifying Classes Mechanics</dt>
    <dd>
      Learn how to build abstractions for classes.
    </dd>
  </dl>
</section>


<section>
  <h2>Further Reading</h2>

  <p>
    From research articles on separation logic to understanding the basics of the <a href="https://rocq-prover.org/">Rocq Proof Assistant</a>, check out <a href="/further-reading">further reading</a>.
  </p>

</section>

<section>
  <h2>Contributing</h2>
  <p>
    If you're interested in contributing to this project, please check out the <a href="/contributing">contributing section</a>.
  </p>
</section>
